One of the major problems of transition from .NET Framework to .NET Core / .NET 5 is adequate replacement of WCF.
Most of the sources suggest gRPC based solutions.
Perhaps such an approach ensures the best possible performance combining effective Protobuf serialization with gRPC fast data tranferring.
But gRPC based solution has its drawbacks.
gRPC implies usage of HTTP/2 communication protocol and therefore does not provide one-to-one replacement for WCF TCP binding.
Usage of gRPC requires for each interface writing a .proto schema following by deneration an appropriate C# code [...].

In many practical cases a requirement for a uniform and relatively simple mechanism for Remote Procedure Call (RPC) in general and replacement of WCF in particular 
prevails over performance maximization.
This work presents one possible approach for RPC implementation in .NET Core / .NET 5 using gRPC with a single method for duplex data streaming.

One of such approaches is implemented and discussed in this article. 
 
Main Features

Interface shared between server and client with its actual implementation on the server,
Concurrency modes similar to WCF, namely Singleton, Per Call and Per Session,
Pseudo-synchronic Remote Method Call (RMC) using async / await paradigm or asyncronic RMC with a separate callback,
One-way RMC,
Usage of TLS for channel encryption,
A single "black box" DLL sutable for usage in ASP.NET server and .NET client
Minimum additional code on both server and client sides.